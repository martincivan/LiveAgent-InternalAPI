openapi: 3.0.1
info:
  title: LiveAgent Async Event API
  description: 'This API is for async event communication'
  termsOfService: http://swagger.io/terms/
  contact:
    email: mcivan@qualityunit.com
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.0
externalDocs:
  description: Find out more about Swagger
  url: http://swagger.io
servers:
- url: /public/api/internal/
tags:
- name: events
  description: Calls about Domain events
  externalDocs:
    description: Find out more
    url: http://swagger.io
paths:
  /test:
    get:
      tags:
        - events
      summary: Get event consumer definitions
      description: Consumer is defined by unique ID and list of event IDs it consumes
      operationId: getTest
      responses:
        200:
          description: successful operation
      security:
        - bearerAuth: [ ]
  /handlers:
    get:
      tags:
      - events
      summary: Get event consumer definitions 
      description: Consumer is defined by unique ID and list of event IDs it consumes
      operationId: getEventConsumers
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Consumer'
        501:
          description: Async event handler not configured
    post:
      tags:
        - events
      summary: Execute event handlers
      description: Execute event handler by handler ID
      operationId: executeHandler
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HandlerPayload'
      responses:
        200:
          description: successful operation
        501:
          description: Async event handler not configured
components:
  schemas:
    Consumer:
      type: object
      properties:
        id:
          type: string
        events:
          type: array
          items:
            $ref: '#/components/schemas/Event'
    Event:
      type: object
      properties:
        id:
          type: string
        topic:
          type: string
    Topic:
      type: object
      properties:
        id:
          type: string
        events:
          type: array
          items:
            $ref: '#/components/schemas/Event'
    HandlerPayload:
      type: object
      properties:
        id:
          type: string
        event:
          type: string
        payload:
          type: string
  securitySchemes:
    bearerAuth:            # arbitrary name for the security scheme
      type: http
      scheme: bearer
      bearerFormat: JWT